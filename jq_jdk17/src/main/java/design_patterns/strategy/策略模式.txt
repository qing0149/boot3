策略模式是一种行为设计模式，他能让你定义一系列算法，并将将每种算法分别放在独立的类中，以使栓发的对下个能够相互替换
四个对象:策略接口,策略接口,上下文,客户端

策略模式优点
    你可以在运⾏时切换对象内的算法。
    你可以将算法的实现和使⽤算法的代码隔离开来。
    你可以使⽤组合来代替继承。
    开闭原则。 你⽆需对上下⽂进⾏修改就能够引⼊新的策略。
策略模式缺点
    如果你的算法极少发⽣改变， 那么没有任何理由引⼊新的类和接
    ⼝。 使⽤该模式只会让程序过于复杂。
    客户端必须知晓策略间的不同——它需要选择合适的策略。
    许多现代编程语⾔⽀持函数类型功能， 允许你在⼀组匿名函数中实
    现不同版本的算法。 这样， 你使⽤这些函数的⽅式就和使⽤策略对
    象时完全相同， ⽆需借助额外的类和接⼝来保持代码简洁。
策略模式应⽤场景
    当你想使⽤对象中各种不同的算法变体， 并希望能在运⾏时切换算
    法时， 可使⽤策略模式。
    当你有许多仅在执⾏某些⾏为时略有不同的相似类时， 可使⽤策略
    模式。
    如果算法在上下⽂的逻辑中不是特别重要， 使⽤该模式能将类的业
    务逻辑与其算法实现细节隔离开来。
函数式编程思想相似